---
import { getImage } from 'astro:assets';
import { render } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import { getBlogCollection } from '../../../utils/collectionUtils';

export const getStaticPaths = (async () => {
	const posts = await getBlogCollection();
	return posts.map((post) => ({
		params: {
			slug: post.id,
		},
		props: {
			post,
		},
	}));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { Content } = await render(post.render);

let postOgImage = `/blog/${post.id}/og.png`;
let postOgDescription = post.data.description;

if (post.data.hero) {
	const heroImage = post.data.hero.image;
	const heroImageWebp = (await getImage({ src: heroImage as ImageMetadata, format: 'webp' })).src;
	postOgImage = heroImageWebp;
	postOgDescription = post.data.hero.alt;
}

const imageProps = {
	src: postOgImage,
	alt: postOgDescription,
	width: 3840,
	height: 2160,
};
---

{
    JSON.stringify(post)
}